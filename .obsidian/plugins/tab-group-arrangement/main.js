/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var W=(r,a)=>{for(var s in a)w(r,s,{get:a[s],enumerable:!0})},X=(r,a,s,t)=>{if(a&&typeof a=="object"||typeof a=="function")for(let e of H(a))!U.call(r,e)&&e!==s&&w(r,e,{get:()=>a[e],enumerable:!(t=G(a,e))||t.enumerable});return r};var C=r=>X(w({},"__esModule",{value:!0}),r);var B={};W(B,{EditorGroupArrangementPluginTab:()=>f,default:()=>M});module.exports=C(B);var n=require("obsidian"),R=require("obsidian"),x=(s=>(s.MANUAL="manual",s.AUTO_EXPAND="auto_expand",s))(x||{}),b={["manual"]:"columns-2",["auto_expand"]:"expand"},_={mode:"manual",MIN_HEIGHT_PX:80,MIN_WIDTH_PX:200},f=class extends n.PluginSettingTab{constructor(s,t){super(s,t);this.plugin=t,this.debouncedRearrange=(0,R.debounce)(()=>{this.plugin.settings.mode==="auto_expand"&&this.plugin.executeModeAction()},100)}display(){let{containerEl:s}=this;s.empty(),new n.Setting(s).setName("Mode").setDesc("Choose the mode for tab group arrangement").addDropdown(t=>{t.addOption("manual","Manual arrangement"),t.addOption("auto_expand","Auto expand active tab group"),t.setValue(this.plugin.settings.mode),t.onChange(async e=>{this.plugin.settings.mode=e,await this.plugin.saveSettings()})}),new n.Setting(s).setName("Minimum width for inactive tab groups").setDesc("Minimum width for inactive tab groups of a tab node when expanding active group").addSlider(t=>{t.setLimits(50,300,10),t.setValue(this.plugin.settings.MIN_WIDTH_PX),t.setDynamicTooltip(),t.onChange(async e=>{this.plugin.settings.MIN_WIDTH_PX=e,await this.plugin.saveSettings(),this.debouncedRearrange()})}).addExtraButton(t=>{t.setIcon("reset").setTooltip("Reset to default").onClick(async()=>{this.plugin.settings.MIN_WIDTH_PX=_.MIN_WIDTH_PX,await this.plugin.saveSettings(),this.debouncedRearrange(),this.display()})}),new n.Setting(s).setName("Minimum height for inactive tab groups").setDesc("Minimum height for inactive tab groups of a tab node when expanding active group").addSlider(t=>{t.setLimits(50,300,10),t.setValue(this.plugin.settings.MIN_HEIGHT_PX),t.setDynamicTooltip(),t.onChange(async e=>{this.plugin.settings.MIN_HEIGHT_PX=e,await this.plugin.saveSettings(),this.debouncedRearrange()})}).addExtraButton(t=>{t.setIcon("reset").setTooltip("Reset to default").onClick(async()=>{this.plugin.settings.MIN_HEIGHT_PX=_.MIN_HEIGHT_PX,await this.plugin.saveSettings(),this.debouncedRearrange(),this.display()})})}},M=class extends n.Plugin{async onload(){console.log("obsidian-tab-group-arrangement-plugin loaded"),await this.loadSettings(),this.addSettingTab(new f(this.app,this)),this._registerCommands(),this._registerEventListeners(),this._setupStatusBarItem()}async onunload(){console.log("obsidian-tab-group-arrangement-plugin unloaded")}async loadSettings(){let s=await this.loadData();s?(this.settings=Object.assign({},_,s),Object.values(x).includes(this.settings.mode)||(this.settings.mode=_.mode)):this.settings=Object.assign({},_)}async saveSettings(){await this.saveData(this.settings)}executeModeAction(){this.settings.mode==="auto_expand"?this._expandActiveLeaf():this._arrangeEvenly()}_setupStatusBarItem(){this._statusBarItem=this.addStatusBarItem(),this._statusBarItem.addClass("mod-clickable"),this._statusBarItem.onClickEvent(s=>{let t=new n.Menu;t.addItem(e=>{e.setIsLabel(!0),e.setTitle("Actions"),e.setDisabled(!0)}),t.addItem(e=>{e.setTitle("Arrange Evenly"),e.setIcon("layout-grid"),e.onClick(()=>{this._arrangeEvenly()})}),t.addItem(e=>{e.setTitle("Expand active tab group"),e.setIcon("expand"),e.onClick(()=>{if(!this._isLeafUnderRootSplit(this.app.workspace.activeLeaf)){new n.Notice("Should focus on an editor or tab to expand");return}this._expandActiveLeaf()})}),t.addItem(e=>{e.setIsLabel(!0),e.setTitle("Mode"),e.setDisabled(!0)}),t.addItem(e=>{e.setTitle("Manual arrangement"),e.setIcon("columns-2"),e.setChecked(this.settings.mode==="manual"),e.onClick(A=>{this.settings.mode="manual",(0,n.setIcon)(this._statusBarItem,b[this.settings.mode]),this.saveSettings()})}),t.addItem(e=>{e.setTitle("Auto expand active tab group"),e.setIcon("expand"),e.setChecked(this.settings.mode==="auto_expand"),e.onClick(async A=>{this.settings.mode="auto_expand",(0,n.setIcon)(this._statusBarItem,b[this.settings.mode]),await this.saveSettings()})}),t.showAtMouseEvent(s)}),this._updateStatusBarItem()}_updateStatusBarItem(){(0,n.setIcon)(this._statusBarItem,b[this.settings.mode]),(0,n.setTooltip)(this._statusBarItem,"Tab group arrangement",{placement:"top"})}_registerCommands(){this.addCommand({id:"arrange-evenly",name:"Arrange evenly",callback:()=>{this._arrangeEvenly()},hotkeys:[]}),this.addCommand({id:"arrange-expand-active",name:"Expand active tab group",callback:()=>{this._expandActiveLeaf()},hotkeys:[]}),this.addCommand({id:"toggle-mode-between-manual-and-auto-expand",name:"Toggle mode between manual and auto expand",callback:async()=>{this.settings.mode==="manual"?this.settings.mode="auto_expand":this.settings.mode="manual",await this.saveSettings(),this._updateStatusBarItem(),new n.Notice(`Mode switched to ${this.settings.mode}`)},hotkeys:[]})}_registerEventListeners(){this.registerDomEvent(document,"click",s=>{let t=s.target;t.closest(".mod-root")&&this.settings.mode==="auto_expand"&&t.closest(".workspace-tab-header")&&this._expandActiveLeaf()}),this.registerEvent(this.app.workspace.on("active-leaf-change",s=>{this.settings.mode==="auto_expand"&&s&&this._isLeafUnderRootSplit(s)&&this._expandActiveLeaf(s)})),this.registerDomEvent(window,"resize",(0,R.debounce)(async()=>{this.settings.mode==="auto_expand"&&this._expandActiveLeaf()},100))}_collectedNonLeafNodes(){let s=new Set;return this.app.workspace.iterateRootLeaves(t=>{let e=t.parent;for(;e&&!(e===this.app.workspace.rootSplit||s.has(e));)s.add(e),e=e.parent}),s}_arrangeEvenly(){this._collectedNonLeafNodes().forEach(t=>{let e=t.containerEl;e&&(e.style.flexGrow="")})}_getPathAscendants(s){let t=[],e=s.parent;for(;e&&e!==this.app.workspace.rootSplit;)t.push(e),e=e.parent;return t}_isLeafUnderRootSplit(s){if(!s)return!1;let t=s.parent;for(;t;){if(t===this.app.workspace.rootSplit)return!0;t=t.parent}return!1}_expandActiveLeaf(s){let t=s||this.app.workspace.activeLeaf;if(!t||!this._isLeafUnderRootSplit(t))throw new Error("The active leaf is not under root split");let e=(i,u)=>{if(i instanceof n.WorkspaceSplit){let l=i.children;for(let m of l){let[E,p]=e(m,u);u.set(m,[E,p])}let h=i.direction==="vertical",k=i.direction==="horizontal",o=[0,0];for(let m of l){let[E,p]=u.get(m);if(h)o=[o[0]+E,Math.max(o[1],p)];else if(k)o=[Math.max(o[0],E),o[1]+p];else throw new Error("Unexpected direction")}return[o[0],o[1]]}else{if(!(i instanceof n.WorkspaceTabs))throw new Error("Unexpected node type");return[this.settings.MIN_WIDTH_PX,this.settings.MIN_HEIGHT_PX]}},A=(i,u,l)=>{if(!(i instanceof n.WorkspaceSplit))return;let h=i.children,o=i.containerEl.getBoundingClientRect(),m=o.width,E=o.height,p=i.direction==="vertical",v=i.direction==="horizontal",c=0;for(let d of h){if(l.includes(d)||d instanceof n.WorkspaceLeaf)continue;let[N,y]=u.get(d);if(p)c+=N;else if(v)c+=y;else throw new Error("Unexpected direction")}let g=0;if(p)g=m-c;else if(v)g=E-c;else throw new Error("Unexpected direction");g=Math.max(g,v?this.settings.MIN_HEIGHT_PX:this.settings.MIN_WIDTH_PX);let L=h.some(d=>l.includes(d)),O=100*g/(g+c),P=L?100*c/(g+c)/Math.max(h.length-1,1):100*c/c/Math.max(h.length,1);for(let d of h){let N=d.containerEl;l.includes(d)?N.style.flexGrow=O.toString():N.style.flexGrow=P.toString(),A(d,u,l)}},I=this.app.workspace.rootSplit,T=new Map,S=this._getPathAscendants(t),D=e(I,T);T.set(I,[D[0],D[1]]),A(I,T,S)}};

/* nosourcemap */